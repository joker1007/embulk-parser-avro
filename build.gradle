plugins {
    id "java"
    id "org.embulk.embulk-plugins" version "0.5.5"
}

repositories {
    mavenCentral()
    jcenter()
}
configurations {
    provided
}

group = "io.github.joker1007"
version = "0.5.0"
description = "Embulk parser plugin for Apache Avro format"

sourceCompatibility = 1.8
targetCompatibility = 1.8

embulkPlugin {
    mainClass = "org.embulk.parser.avro.AvroParserPlugin"
    category = "parser"
    type = "avro"
}

dependencies {
    compileOnly  "org.embulk:embulk-api:0.10.43"
    compileOnly  "org.embulk:embulk-spi:0.10.43"

    // for compatibility with embulk-0.9.x
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.6.7"
    implementation "com.fasterxml.jackson.core:jackson-core:2.6.7"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.6.7"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.6.7"

    implementation "org.embulk:embulk-util-file:0.1.3"
    implementation "org.embulk:embulk-util-json:0.1.1"
    implementation("org.embulk:embulk-util-config:0.3.1") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-annotations"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
        exclude group: "com.fasterxml.jackson.datatype", module: "jackson-datatype-jdk8"
    }
    implementation "org.embulk:embulk-util-timestamp:0.2.1"
    implementation("org.apache.avro:avro:1.11.2") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-annotations"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
    }
    implementation "com.github.luben:zstd-jni:1.4.5-12"
    implementation "org.tukaani:xz:1.8"
    implementation "org.xerial.snappy:snappy-java:1.1.8.1"
    testImplementation "junit:junit:4.+"

    testCompile "org.embulk:embulk-api:0.10.43"
    testCompile "org.embulk:embulk-spi:0.10.43"
    testCompile "org.embulk:embulk-core:0.10.43"

    // TODO: Remove them.
    // These `testCompile` are a tentative workaround. It will be covered in Embulk core's testing mechanism.
    testCompile "org.embulk:embulk-deps:0.10.29"
}

task classpath(type: Copy, dependsOn: ["jar"]) {
    doFirst { file("classpath").deleteDir() }
    from (configurations.runtime - configurations.provided + files(jar.archivePath))
    into "classpath"
}
clean { delete "classpath" }

//task gem(type: JRubyExec, dependsOn: ["gemspec", "classpath"]) {
//    jrubyArgs "-rrubygems/gem_runner", "-eGem::GemRunner.new.run(ARGV)", "build"
//    script "${project.name}.gemspec"
//    doLast { ant.move(file: "${project.name}-${project.version}.gem", todir: "pkg") }
//}
//
//task gemPush(type: JRubyExec, dependsOn: ["gem"]) {
//    jrubyArgs "-rrubygems/gem_runner", "-eGem::GemRunner.new.run(ARGV)", "push"
//    script "pkg/${project.name}-${project.version}.gem"
//}
//
//task "package"(dependsOn: ["gemspec", "classpath"]) << {
//    println "> Build succeeded."
//    println "> You can run embulk with '-L ${file(".").absolutePath}' argument."
//}

//task gemspec {
//    ext.gemspecFile = file("${project.name}.gemspec")
//    inputs.file "build.gradle"
//    outputs.file gemspecFile
//    doLast { gemspecFile.write($/
//Gem::Specification.new do |spec|
//  spec.name          = "${project.name}"
//  spec.version       = "${project.version}"
//  spec.authors       = ["joker1007"]
//  spec.summary       = %[Avro parser plugin for Embulk]
//  spec.description   = %[Parses Avro files read by other file input plugins.]
//  spec.email         = ["kakyoin.hierophant@gmail.com"]
//  spec.licenses      = ["MIT"]
//  spec.homepage      = "https://github.com/joker1007/embulk-parser-avro"
//
//  spec.files         = `git ls-files`.split("\n") + Dir["classpath/*.jar"]
//  spec.test_files    = spec.files.grep(%r"^(test|spec)/")
//  spec.require_paths = ["lib"]
//
//  spec.add_development_dependency 'bundler', ['~> 1.0']
//  spec.add_development_dependency 'rake', ['>= 10.0']
//end
///$)
//    }
//}
clean { delete "${project.name}.gemspec" }
